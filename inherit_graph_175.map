<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" title=" " alt="" coords="5,349,112,374"/>
<area shape="rect" id="node2" href="$structentt_1_1is__meta__pointer__like.html" title=" " alt="" coords="182,5,326,45"/>
<area shape="rect" id="node4" href="$structentt_1_1enum__as__bitmask.html" title="Enable bitmask support for enum classes." alt="" coords="175,69,333,109"/>
<area shape="rect" id="node5" href="$structentt_1_1is__applicable.html" title="Same as std::is_invocable, but with tuples." alt="" coords="170,133,338,173"/>
<area shape="rect" id="node6" href="$structentt_1_1is__applicable__r.html" title="Same as std::is_invocable_r, but with tuples for arguments." alt="" coords="169,198,339,253"/>
<area shape="rect" id="node7" href="$structentt_1_1is__complete.html" title="Provides the member constant value to true if a given type is complete, false otherwise." alt="" coords="189,277,319,317"/>
<area shape="rect" id="node8" href="$structentt_1_1is__equality__comparable.html" title="Provides the member constant value to true if a given type is equality comparable,..." alt="" coords="160,341,348,381"/>
<area shape="rect" id="node9" href="$structentt_1_1is__equality__comparable_3_01Type_0fN_0e_4.html" title="Provides the member constant value to true if a given type is equality comparable,..." alt="" coords="160,405,348,445"/>
<area shape="rect" id="node10" href="$structentt_1_1is__iterator.html" title="Provides the member constant value to true if a given type is an iterator, false otherwise." alt="" coords="189,469,319,509"/>
<area shape="rect" id="node11" href="$structentt_1_1is__meta__pointer__like.html" title="Provides the member constant value to true if a given type is a pointer&#45;like type from the point of v..." alt="" coords="182,533,326,573"/>
<area shape="rect" id="node12" href="$structentt_1_1is__meta__pointer__like_3_01Type_07_5_08_0fN_0e_4.html" title="Partial specialization used to reject pointers to arrays." alt="" coords="182,597,326,637"/>
<area shape="rect" id="node13" href="$structentt_1_1is__transparent.html" title="Provides the member constant value to true if Type::is_transparent is valid and denotes a type,..." alt="" coords="185,661,323,701"/>
<area shape="rect" id="node3" href="$structentt_1_1is__meta__pointer__like_3_01const_01Type_01_4.html" title="Partial specialization to ensure that const pointer&#45;like types are also accepted." alt="" coords="396,5,540,45"/>
</map>
